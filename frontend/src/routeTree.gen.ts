/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TransfersRouteImport } from './routes/transfers'
import { Route as TransactionsRouteImport } from './routes/transactions'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as BudgetsRouteImport } from './routes/budgets'
import { Route as AccountsRouteImport } from './routes/accounts'
import { Route as IndexRouteImport } from './routes/index'

const TransfersRoute = TransfersRouteImport.update({
  id: '/transfers',
  path: '/transfers',
  getParentRoute: () => rootRouteImport,
} as any)
const TransactionsRoute = TransactionsRouteImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const BudgetsRoute = BudgetsRouteImport.update({
  id: '/budgets',
  path: '/budgets',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountsRoute = AccountsRouteImport.update({
  id: '/accounts',
  path: '/accounts',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/accounts': typeof AccountsRoute
  '/budgets': typeof BudgetsRoute
  '/dashboard': typeof DashboardRoute
  '/transactions': typeof TransactionsRoute
  '/transfers': typeof TransfersRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/accounts': typeof AccountsRoute
  '/budgets': typeof BudgetsRoute
  '/dashboard': typeof DashboardRoute
  '/transactions': typeof TransactionsRoute
  '/transfers': typeof TransfersRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/accounts': typeof AccountsRoute
  '/budgets': typeof BudgetsRoute
  '/dashboard': typeof DashboardRoute
  '/transactions': typeof TransactionsRoute
  '/transfers': typeof TransfersRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/accounts'
    | '/budgets'
    | '/dashboard'
    | '/transactions'
    | '/transfers'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/accounts'
    | '/budgets'
    | '/dashboard'
    | '/transactions'
    | '/transfers'
  id:
    | '__root__'
    | '/'
    | '/accounts'
    | '/budgets'
    | '/dashboard'
    | '/transactions'
    | '/transfers'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountsRoute: typeof AccountsRoute
  BudgetsRoute: typeof BudgetsRoute
  DashboardRoute: typeof DashboardRoute
  TransactionsRoute: typeof TransactionsRoute
  TransfersRoute: typeof TransfersRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/transfers': {
      id: '/transfers'
      path: '/transfers'
      fullPath: '/transfers'
      preLoaderRoute: typeof TransfersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/transactions': {
      id: '/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof TransactionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/budgets': {
      id: '/budgets'
      path: '/budgets'
      fullPath: '/budgets'
      preLoaderRoute: typeof BudgetsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/accounts': {
      id: '/accounts'
      path: '/accounts'
      fullPath: '/accounts'
      preLoaderRoute: typeof AccountsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountsRoute: AccountsRoute,
  BudgetsRoute: BudgetsRoute,
  DashboardRoute: DashboardRoute,
  TransactionsRoute: TransactionsRoute,
  TransfersRoute: TransfersRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
